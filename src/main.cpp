#include <Arduino.h>
#include <U8g2lib.h>
#include <WiFiManager.h>
#include <ArduinoJson.h>
#include <WiFiClient.h>
#include <WebServer.h>
#include <WiFi.h>
#include <HTTPClient.h>
#include <WiFiClientSecure.h>
#include <BluetoothSerial.h>

#if !defined(CONFIG_BT_ENABLED) || !defined(CONFIG_BLUEDROID_ENABLED)
#error Bluetooth is not enabled! Please run `make menuconfig` to and enable it
#endif

#ifdef U8X8_HAVE_HW_SPI
#include <SPI.h>
#endif
#ifdef U8X8_HAVE_HW_I2C
#include <Wire.h>
#endif

U8G2_ST7920_128X64_F_SW_SPI u8g2(U8G2_R0, /* clock=*/ 18, /* data=*/ 23, /* CS=*/ 5, /* reset=*/ 22); // ESP32


static const unsigned char frame[] U8X8_PROGMEM  = {
  0x00, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x90, 0x5a, 0x55, 0x69, 0xdb, 0xf7, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x48, 0xe9, 0xff, 0xff, 0xff, 0xfe, 0x01, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xd4, 0xbc, 0xaa, 0xfe, 0xff, 0xff, 0x03, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x6a, 0xd6, 0xff, 0xdb, 0xff, 0xfd, 0x07, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xd6, 0x7b, 0x75, 0xff, 0xff, 0xff, 0x07, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x29, 0xad, 0xff, 0xff, 0xff, 0xff, 0x0f, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xf7, 0xfe, 0xef, 0xff, 0xff, 0x1f, 0x00, 0x00, 0x80, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x80, 0x94, 0xdd, 0xdb, 0xff, 0xff, 0xfb, 0x3f, 0x00, 0x00, 0xc0, 
  0xff, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xff, 0xfe, 0xfb, 0xdf, 0xff, 0xff, 0x3f, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0xc0, 0xea, 0x7b, 0xef, 0xbf, 0xfb, 0xff, 0x5f, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x40, 0x5d, 0xdf, 0xc7, 0x3f, 0xf7, 0x77, 0x3f, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0xc0, 0xd7, 0xff, 0xc5, 0xbf, 0xe7, 0xdf, 0xbe, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x80, 0x7a, 0xfb, 0x83, 0xfe, 0xe6, 0xaf, 0x3f, 0x01, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x60, 0xfb, 0xff, 0x47, 0xff, 0xef, 0xbf, 0x7d, 0x02, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0xa0, 0xed, 0xff, 0x41, 0xfd, 0xcf, 0x37, 0x7e, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0xc0, 0x74, 0xfb, 0xcf, 0x78, 0xcf, 0x37, 0xfb, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x40, 0xff, 0xff, 0x97, 0x38, 0xcf, 0x57, 0xff, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0xe0, 0xf5, 0xef, 0x86, 0x4f, 0xdb, 0x57, 0x73, 0x01, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0xa0, 0xde, 0xee, 0xbb, 0x7d, 0xd7, 0x53, 0x7f, 0x02, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0xe0, 0xd2, 0xef, 0xbd, 0xef, 0x5f, 0x68, 0x7f, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0xa0, 0xed, 0xdb, 0xbf, 0xba, 0xff, 0x7b, 0x7f, 0x01, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0xe0, 0xfe, 0xfb, 0x13, 0xfb, 0x7f, 0x7f, 0x5f, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0xa0, 0xb3, 0xa1, 0xe7, 0xfd, 0x7f, 0x7f, 0xdf, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0xe0, 0xcb, 0xd0, 0x0f, 0xfb, 0x1f, 0x7f, 0x9f, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x40, 0x65, 0x50, 0x07, 0xff, 0x3f, 0x5f, 0x9f, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0xc0, 0x37, 0x90, 0x02, 0xff, 0xdf, 0x5c, 0x0f, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x40, 0x03, 0x90, 0x02, 0xff, 0x0f, 0x3f, 0x07, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x80, 0x03, 0x81, 0x83, 0xff, 0x1f, 0x3b, 0x07, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x80, 0x02, 0x02, 0xd7, 0xff, 0x0f, 0x8b, 0x03, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x42, 0x0e, 0x7f, 0xff, 0x8f, 0x0b, 0x03, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x0e, 0x9f, 0xff, 0x8f, 0x0f, 0x01, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x1e, 0xff, 0xff, 0x6f, 0x87, 0x40, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x1e, 0xff, 0xff, 0x9b, 0x07, 0x60, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0xfe, 0xff, 0xff, 0x07, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x3c, 0xfe, 0xff, 0xff, 0x07, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x3d, 0xfe, 0xff, 0xff, 0x03, 0x00, 0x00, 0x00, 0x00, 
  0xff, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x7f, 0xfc, 0xff, 0xff, 0x03, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x7e, 0xfc, 0xff, 0xff, 0x03, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x02, 0xfa, 0xfc, 0xff, 0xff, 0x03, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x03, 0xf8, 0xf8, 0xff, 0xff, 0x03, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x01, 0xfc, 0xf8, 0xff, 0xff, 0x03, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x80, 0x01, 0xfc, 0xf9, 0x3f, 0xff, 0x03, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x80, 0x01, 0xf4, 0xf9, 0x0f, 0xfe, 0x02, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x80, 0x01, 0xf4, 0xf3, 0xff, 0xff, 0x03, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0xc0, 0x01, 0xf8, 0xf7, 0x1f, 0xff, 0x07, 0x00, 0x00, 0x00, 0x00, 
  0xff, 0x7f, 0x00, 0x00, 0x00, 0xc0, 0x01, 0xe0, 0xe7, 0xff, 0xff, 0x07, 0x00, 0x00, 0x00, 0x80, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x40, 0x01, 0xf4, 0xe7, 0xff, 0x9f, 0x07, 0x03, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0xc0, 0x01, 0xe0, 0xef, 0xff, 0x87, 0x0f, 0x03, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0xe0, 0x01, 0xc6, 0xef, 0xff, 0x03, 0x8f, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0xa0, 0x00, 0xee, 0xdf, 0xff, 0x01, 0x0f, 0x00, 0x00, 0x00, 0x0c, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0xe0, 0x01, 0xde, 0x5f, 0x7f, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x04, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0xb0, 0x00, 0xcf, 0x3f, 0x39, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0xd0, 0x01, 0x9f, 0x3f, 0x01, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x70, 0x01, 0x5f, 0x3f, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x50, 0x83, 0x3f, 0xff, 0x01, 0x00, 0x1e, 0x00, 0x00, 0x70, 0xcc, 
  0xff, 0x7f, 0x00, 0x00, 0x00, 0xb0, 0x83, 0x3f, 0x7e, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x50, 0x4a, 
  0xff, 0x7f, 0x00, 0x00, 0x00, 0x50, 0xc1, 0x7f, 0x7e, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x40, 0x00, 
  0xff, 0x7f, 0x00, 0x00, 0x00, 0xd8, 0xe2, 0xff, 0xfc, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x40, 0x00, 
  0xff, 0x7f, 0x00, 0x00, 0x00, 0x58, 0xf1, 0xff, 0xfd, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x04, 0x80, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x18, 0xfe, 0xff, 0xdb, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x64, 0x4e, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x08, 0xf0, 0xff, 0xfb, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x24, 0xca, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x08, 0x00, 0xfe, 0xff, 0x00, 0x00, 0x38, 0x00, 0x00, 0x44, 0x14, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x18, 0x00, 0xf8, 0xb7, 0x06, 0x00, 0x68, 0x00, 0x00, 0x44, 0x0c, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x08, 0x0e, 0xf0, 0xff, 0x0e, 0x00, 0x78, 0x00, 0x00, 0x04, 0x14
};

static const unsigned char frame1[] U8X8_PROGMEM  ={
  0x00, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x44, 0xa9, 0xaa, 0x6a, 0xdb, 0x36, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x42, 0xd5, 0xdf, 0xff, 0xff, 0x7f, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x81, 0x6f, 0x65, 0xf7, 0xdf, 0xff, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x80, 0xf8, 0xba, 0xf7, 0xbf, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x80, 0x54, 0xef, 0xfd, 0xfe, 0xbf, 0xff, 0x03, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x40, 0xea, 0xb5, 0xda, 0xff, 0xff, 0xff, 0x07, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xbc, 0x5e, 0xfd, 0xdd, 0x7f, 0xff, 0x0d, 0x00, 0x00, 0xc0, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0xc0, 0xf5, 0xeb, 0xfd, 0xbb, 0xff, 0xef, 0x0f, 0x00, 0x00, 0x40, 
  0xff, 0x7f, 0x00, 0x00, 0x00, 0x90, 0xbe, 0xbe, 0xfc, 0x77, 0xff, 0xfe, 0x17, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x60, 0xdb, 0xbb, 0xfc, 0xe7, 0xfe, 0xdb, 0x17, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0xc0, 0x7d, 0x7f, 0xf8, 0xdf, 0xfc, 0xe7, 0x07, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0xa8, 0xde, 0x6f, 0xf0, 0xef, 0xfd, 0xb7, 0x2f, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x48, 0x7a, 0x7b, 0xf0, 0xff, 0xf9, 0xe6, 0x0f, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0xf0, 0xdf, 0xbf, 0xa0, 0xf7, 0xf9, 0xa7, 0x1f, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x50, 0xed, 0xbf, 0x91, 0xff, 0xf9, 0x65, 0x1f, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0xe8, 0x7f, 0xff, 0xf2, 0xee, 0xf0, 0x4c, 0x2f, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0xb8, 0xda, 0xdf, 0x36, 0xff, 0xf7, 0xcf, 0x6f, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0xa8, 0xff, 0x3d, 0xf7, 0xfd, 0x1f, 0xdd, 0x9d, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0xf8, 0xe6, 0xfd, 0xf7, 0xff, 0xef, 0xdf, 0x1f, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0xa8, 0x7d, 0xfb, 0x9d, 0xfb, 0xcf, 0xdb, 0x1b, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0xd8, 0xf7, 0xfb, 0x81, 0xfe, 0xff, 0xdf, 0x17, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0xc8, 0xf2, 0xf6, 0x7c, 0xff, 0xef, 0xdf, 0x05, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x58, 0x72, 0x7c, 0xe0, 0xff, 0xf3, 0xf7, 0x05, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0xc8, 0x59, 0xe4, 0xe1, 0xff, 0xb3, 0xd7, 0x05, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x58, 0x79, 0xb1, 0xc1, 0xff, 0x67, 0xc7, 0x01, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0xc8, 0x29, 0x20, 0xc0, 0xff, 0xc3, 0xcf, 0x01, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x50, 0x25, 0xa0, 0xd2, 0xff, 0xe3, 0xe2, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0xf0, 0x50, 0xe0, 0xd2, 0xff, 0xc7, 0xe2, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0xa0, 0xd0, 0xc0, 0xfd, 0xff, 0xc7, 0x43, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0xe0, 0xa0, 0xc3, 0xf3, 0xff, 0xdf, 0x03, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x80, 0x80, 0xc3, 0xff, 0xff, 0xfb, 0x01, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x80, 0x91, 0x87, 0xff, 0xff, 0xfe, 0x01, 0x40, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x01, 0x87, 0xff, 0xff, 0xfe, 0x01, 0x20, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x8f, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x40, 0x0f, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x40, 0x1f, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xff, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x01, 0x3f, 0xfe, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xc1, 0x7c, 0xfe, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x01, 0x7c, 0xfc, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x80, 0x01, 0xfb, 0xfc, 0xff, 0x7f, 0x01, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x80, 0x00, 0xfd, 0xf9, 0x7b, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x80, 0x00, 0xfb, 0xf9, 0xff, 0xff, 0x03, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0xc0, 0x00, 0xf5, 0xfb, 0xb7, 0xdf, 0x03, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0xc0, 0x00, 0xf9, 0xf7, 0xff, 0xef, 0x03, 0x00, 0x00, 0x00, 0x00, 
  0xff, 0x7f, 0x00, 0x00, 0x00, 0xc0, 0x00, 0xf5, 0xf7, 0xff, 0xc7, 0x07, 0x00, 0x00, 0x00, 0x80, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x40, 0x00, 0xf3, 0xff, 0xff, 0xc3, 0x07, 0x03, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0xe0, 0x00, 0xe3, 0xef, 0xff, 0x81, 0x07, 0x03, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0xa0, 0x00, 0xc7, 0xff, 0xff, 0x80, 0x8f, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0xe0, 0x01, 0xdf, 0xdf, 0x3f, 0x80, 0x0f, 0x00, 0x00, 0x00, 0x0c, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0xa0, 0x00, 0xb7, 0xdf, 0x1f, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x04, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0xe0, 0x01, 0x4f, 0xbf, 0x0c, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x50, 0x01, 0x1f, 0x3f, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0xf0, 0x01, 0x5f, 0x7e, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x90, 0x80, 0x3f, 0xff, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x70, 0xcc, 
  0xff, 0x7f, 0x00, 0x00, 0x00, 0x50, 0x83, 0x3f, 0x7d, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x50, 0x4a, 
  0xff, 0x7f, 0x00, 0x00, 0x00, 0xd0, 0x81, 0xff, 0x7c, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x08, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x90, 0xc2, 0xff, 0xfc, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x04, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x50, 0xc5, 0xff, 0xf9, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x04, 0x80, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x30, 0xf6, 0xff, 0xfb, 0x00, 0x00, 0x6c, 0x00, 0x00, 0x64, 0x4e, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0xd0, 0xfb, 0xff, 0xbf, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x24, 0xca, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x30, 0xf0, 0xff, 0xf7, 0x00, 0x00, 0x78, 0x00, 0x00, 0x44, 0x14, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x10, 0x00, 0xfe, 0xff, 0x02, 0x00, 0x68, 0x00, 0x00, 0x44, 0x0c, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xdf, 0x06, 0x00, 0x78, 0x00, 0x00, 0x04, 0x14
}; 


static const unsigned char frame2[] U8X8_PROGMEM  = {
  0x00, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x80, 0xaa, 0x55, 0x75, 0xdb, 0xee, 0x01, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x40, 0xd5, 0xfe, 0xdf, 0xff, 0x7f, 0x03, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xa0, 0x6a, 0xab, 0xef, 0xff, 0xef, 0x07, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xd0, 0xbf, 0xbd, 0x73, 0xff, 0xff, 0x0f, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x70, 0xdd, 0xde, 0xf1, 0xff, 0xdf, 0x3f, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xa8, 0x6b, 0xf7, 0xf8, 0xff, 0xff, 0x7f, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x58, 0xbd, 0x7f, 0xbc, 0xff, 0xff, 0xff, 0x00, 0x00, 0xc0, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xf4, 0xd7, 0x15, 0xfc, 0xff, 0xbf, 0xff, 0x00, 0x00, 0x40, 
  0xff, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x5c, 0xfa, 0x0f, 0xfe, 0x75, 0xff, 0xff, 0x01, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xf4, 0xff, 0x0b, 0xdf, 0x7f, 0xff, 0xff, 0x01, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xde, 0xaf, 0x05, 0xdf, 0x7a, 0x7f, 0xff, 0x03, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xea, 0xfe, 0x03, 0xdf, 0xfb, 0xff, 0xfd, 0x03, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x5e, 0xdf, 0x81, 0x6f, 0xbd, 0xff, 0xeb, 0x03, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x72, 0xfb, 0xc1, 0xf7, 0xdd, 0xfe, 0xfa, 0x07, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xda, 0xff, 0xc0, 0xbf, 0xfd, 0xef, 0xd2, 0x07, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xdf, 0xcf, 0xc0, 0xfc, 0xef, 0x7f, 0xd3, 0x0f, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x2d, 0xdf, 0xd0, 0xff, 0xff, 0xdd, 0xf3, 0x0f, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x87, 0x53, 0x30, 0xdd, 0xf7, 0xff, 0xf3, 0x0b, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xf7, 0x50, 0xb0, 0xdf, 0xfd, 0xb7, 0xd6, 0x03, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x26, 0x30, 0xa4, 0xff, 0xfb, 0xff, 0xf7, 0x13, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x7e, 0x10, 0xf4, 0xf7, 0xff, 0xf1, 0xf7, 0x03, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x10, 0xfc, 0xe7, 0xff, 0xcf, 0xf5, 0x03, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x10, 0x3c, 0xf0, 0xff, 0xbf, 0xf5, 0x03, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x28, 0x1c, 0xee, 0xff, 0x7c, 0xf7, 0x02, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x08, 0x0c, 0xf8, 0x7f, 0xf9, 0xf3, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x38, 0x0c, 0xf8, 0x7f, 0xf4, 0xbb, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x1c, 0x3a, 0x54, 0xf8, 0x3f, 0xec, 0xb9, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x18, 0x28, 0x7c, 0xfa, 0x7f, 0xec, 0xb9, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x98, 0x18, 0xbc, 0xff, 0xff, 0xe8, 0x39, 0x02, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x7c, 0xfc, 0xff, 0xe8, 0x18, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x90, 0x10, 0xfc, 0xff, 0xff, 0xff, 0x18, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0xfe, 0xff, 0xff, 0x7c, 0x24, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x80, 0x1b, 0xfe, 0xff, 0xff, 0x7f, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x08, 0x18, 0xfe, 0xff, 0xff, 0x3f, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x0c, 0xfe, 0xff, 0xdf, 0x3f, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x06, 0x0e, 0xfe, 0xff, 0xff, 0x1f, 0x00, 0x00, 0x00, 0x00, 
  0xff, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x07, 0x08, 0xfe, 0xff, 0xff, 0x1f, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x80, 0x03, 0x08, 0xfe, 0xff, 0xff, 0x3f, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0xc0, 0x01, 0x08, 0xfe, 0xff, 0xff, 0x3f, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x08, 0xfe, 0xff, 0xff, 0x2f, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0xe0, 0x00, 0x08, 0xfe, 0xff, 0xff, 0x7f, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x70, 0x00, 0x08, 0xff, 0xff, 0xff, 0x7f, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x10, 0x00, 0x08, 0xff, 0x9f, 0xff, 0x77, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x38, 0x00, 0x08, 0xff, 0x1f, 0xf0, 0x7f, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x08, 0x00, 0x08, 0xfd, 0xff, 0xff, 0xfb, 0x00, 0x00, 0x00, 0x00, 
  0xff, 0x7f, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x08, 0xff, 0xff, 0xfd, 0xf1, 0x00, 0x00, 0x00, 0x80, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x06, 0x00, 0x08, 0xe5, 0xff, 0x7f, 0xf0, 0x02, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x08, 0xdd, 0xff, 0x3e, 0xf0, 0x02, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x06, 0x00, 0x08, 0x94, 0xff, 0x1f, 0xe0, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x05, 0x00, 0x08, 0x6b, 0xfe, 0x0f, 0xe0, 0x01, 0x00, 0x00, 0x0c, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x05, 0x00, 0x0c, 0xd5, 0xf9, 0x07, 0xe0, 0x01, 0x00, 0x00, 0x04, 
  0xfe, 0x7f, 0x00, 0x00, 0x80, 0x00, 0x00, 0x1c, 0x88, 0xee, 0x03, 0xe0, 0x01, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x80, 0x00, 0x00, 0x1c, 0x18, 0x82, 0x01, 0xe0, 0x01, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x06, 0x05, 0x00, 0xe0, 0x01, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x40, 0x00, 0x00, 0x1f, 0xe1, 0x04, 0x00, 0xe0, 0x03, 0x00, 0x70, 0xcc, 
  0xff, 0x7f, 0x00, 0x00, 0x40, 0x00, 0x00, 0x1f, 0x03, 0x00, 0x00, 0xe2, 0x03, 0x00, 0x50, 0x4a, 
  0xff, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x80, 0x17, 0x01, 0x00, 0x00, 0xe0, 0x03, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x20, 0x00, 0xc0, 0x1f, 0x03, 0x00, 0x00, 0x60, 0x03, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x20, 0x00, 0xe0, 0x3f, 0x07, 0x00, 0x00, 0xe0, 0x03, 0x00, 0x04, 0x80, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x3c, 0xaf, 0x00, 0x00, 0xe0, 0x03, 0x00, 0x64, 0x4e, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x1f, 0x00, 0x00, 0x60, 0x03, 0x00, 0x24, 0xca, 
  0xfe, 0x7f, 0x00, 0x00, 0x10, 0x00, 0x1e, 0x30, 0x7f, 0x00, 0x00, 0xe0, 0x03, 0x00, 0x44, 0x14, 
  0xfe, 0x7f, 0x00, 0x00, 0x10, 0x00, 0xff, 0x20, 0xff, 0x03, 0x00, 0x60, 0x01, 0x00, 0x44, 0x0c, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0xc0, 0xfd, 0x61, 0xff, 0x07, 0x00, 0xa0, 0x01, 0x00, 0x04, 0x14
};

static const unsigned char frame3[] U8X8_PROGMEM  ={
  0x00, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0xaa, 0x56, 0xb5, 0x6d, 0xfb, 0x03, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd5, 0xfa, 0xff, 0xff, 0xbf, 0x07, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6b, 0xaf, 0xff, 0xfd, 0x7f, 0x0f, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x80, 0xbe, 0xf5, 0x1e, 0xfe, 0xff, 0x3e, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xab, 0x7f, 0x07, 0xff, 0xff, 0x7d, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x40, 0xdd, 0xba, 0x81, 0xbf, 0xff, 0xff, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xe0, 0xe7, 0x5f, 0xc0, 0xff, 0xff, 0xff, 0x01, 0x00, 0xc0, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xa0, 0xf2, 0x2d, 0xe0, 0xff, 0xff, 0xff, 0x03, 0x00, 0x40, 
  0xff, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xe0, 0xfb, 0x16, 0xf0, 0xef, 0xfe, 0xff, 0x07, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xb0, 0x75, 0x0f, 0xf8, 0xff, 0xbf, 0xfb, 0x07, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x50, 0xbb, 0x07, 0xbc, 0x77, 0xff, 0xfb, 0x07, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x90, 0xbd, 0x07, 0xfe, 0x9b, 0xdf, 0xff, 0x0f, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xde, 0x03, 0xfe, 0xbc, 0xdf, 0xff, 0x0f, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xa8, 0xef, 0x01, 0xdf, 0xdb, 0xff, 0xef, 0x0f, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x80, 0xdf, 0x01, 0xdf, 0xd7, 0xff, 0xd7, 0x1f, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xd7, 0x80, 0x7f, 0xef, 0xff, 0x9f, 0x1f, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x08, 0xd6, 0xc0, 0xd2, 0xeb, 0xfd, 0x9f, 0x3f, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x70, 0x7b, 0xe0, 0xff, 0xef, 0xfe, 0x1f, 0x2f, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xd0, 0x58, 0xf0, 0xfb, 0xed, 0xff, 0xbb, 0x2d, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x38, 0x0c, 0x70, 0xff, 0x6d, 0x7f, 0xbf, 0x5c, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xdb, 0xf0, 0x07, 0xee, 0x7f, 0xb3, 0x5d, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x71, 0xf0, 0xfd, 0xef, 0xff, 0xb7, 0x1f, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x71, 0xf8, 0xff, 0xbf, 0x7f, 0xb5, 0x1f, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xd0, 0x70, 0xf8, 0x7f, 0xff, 0x5f, 0xaf, 0x1f, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xd0, 0x78, 0xf8, 0xff, 0xfd, 0x7f, 0xaf, 0x1f, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x70, 0xf8, 0xff, 0xff, 0x7f, 0xff, 0x5f, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x60, 0x50, 0xf8, 0xff, 0xff, 0xe7, 0xff, 0x07, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x40, 0x74, 0xf8, 0xff, 0xff, 0xff, 0xcf, 0x03, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x40, 0x38, 0xf8, 0x67, 0xff, 0xff, 0xcf, 0x03, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0xf8, 0x1c, 0xff, 0xff, 0xcf, 0x0a, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x34, 0xf8, 0xff, 0xff, 0xff, 0xc7, 0x0a, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x20, 0x34, 0xfc, 0xff, 0xff, 0xff, 0x23, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x10, 0x3c, 0xfc, 0xff, 0xff, 0xc3, 0x23, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x38, 0xfc, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x06, 0x18, 0xfc, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x1c, 0xfc, 0xff, 0x7f, 0xff, 0x00, 0x00, 0x00, 0x00, 
  0xff, 0x7f, 0x00, 0x00, 0x00, 0x80, 0x01, 0x0c, 0xfe, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0xc0, 0x01, 0x0c, 0xfe, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0xe0, 0x00, 0x0e, 0xfe, 0xff, 0xff, 0xbf, 0x01, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x70, 0x00, 0x0e, 0xfe, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x78, 0x00, 0x07, 0xfe, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x28, 0x00, 0x07, 0xfd, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x07, 0xff, 0xff, 0xff, 0xdf, 0x01, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x16, 0x80, 0x07, 0xfd, 0x7f, 0xfc, 0xdf, 0x01, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x1d, 0x80, 0x03, 0xf7, 0xff, 0xc0, 0xcf, 0x03, 0x00, 0x00, 0x00, 
  0xff, 0x7f, 0x00, 0x00, 0x00, 0x0b, 0x80, 0x83, 0xed, 0xff, 0xff, 0xc7, 0x03, 0x00, 0x00, 0x80, 
  0xfe, 0x7f, 0x00, 0x00, 0x80, 0x06, 0xc0, 0x83, 0xda, 0xff, 0xe5, 0xc3, 0x03, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x80, 0x04, 0xc0, 0x83, 0x95, 0xff, 0xf7, 0x41, 0x03, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x40, 0x02, 0xc0, 0x41, 0x4b, 0xff, 0xff, 0x40, 0x03, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xc1, 0xb6, 0xfc, 0x3b, 0x00, 0x03, 0x00, 0x00, 0x0c, 
  0xfe, 0x7f, 0x00, 0x00, 0x20, 0x00, 0xc0, 0x81, 0x6d, 0xff, 0x1f, 0x00, 0x07, 0x00, 0x00, 0x04, 
  0xfe, 0x7f, 0x00, 0x00, 0x10, 0x00, 0xc0, 0x61, 0x18, 0xca, 0x0f, 0x00, 0x07, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x10, 0x00, 0xc0, 0x21, 0x00, 0x08, 0x07, 0x80, 0x07, 0x00, 0x00, 0x00, 
  0xff, 0x7f, 0x00, 0x00, 0x10, 0x00, 0xc0, 0x71, 0x06, 0x07, 0x00, 0x80, 0x07, 0x00, 0x00, 0x00, 
  0xff, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x71, 0xc1, 0x00, 0x00, 0x80, 0x07, 0x00, 0x70, 0xce, 
  0xfe, 0x7f, 0x00, 0x00, 0x08, 0x00, 0xc0, 0xf1, 0x04, 0x00, 0x00, 0x80, 0x07, 0x00, 0x50, 0x4a, 
  0xff, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xf9, 0x00, 0x00, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x40, 0xf9, 0x01, 0x00, 0x00, 0x80, 0x07, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xf9, 0x03, 0x00, 0x00, 0x80, 0x07, 0x00, 0x04, 0x80, 
  0xfe, 0x7f, 0x00, 0x00, 0x04, 0x00, 0x40, 0xc1, 0x07, 0x00, 0x00, 0x80, 0x03, 0x00, 0x64, 0x4e, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xbc, 0x81, 0x0f, 0x00, 0x00, 0x80, 0x03, 0x00, 0x24, 0xca, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x80, 0xff, 0x94, 0x3f, 0x00, 0x00, 0x84, 0x02, 0x00, 0x44, 0x14, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0xc0, 0x77, 0xc5, 0xff, 0x03, 0x00, 0xc4, 0x03, 0x00, 0x44, 0x0c, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x70, 0xfb, 0xc5, 0xff, 0x07, 0x00, 0x48, 0x03, 0x00, 0x04, 0x14
}; 


static const unsigned char frame4[] U8X8_PROGMEM  = {
  0x00, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0xaa, 0xaa, 0x6a, 0xdb, 0xb6, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd5, 0xfd, 0xff, 0xff, 0xff, 0x03, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6b, 0x56, 0xff, 0xff, 0xff, 0x07, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3e, 0xfb, 0xbf, 0xfb, 0xff, 0x0f, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xeb, 0xfd, 0xf7, 0xfc, 0x7f, 0x1f, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x40, 0xfd, 0x6e, 0x1b, 0xff, 0xff, 0x3f, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xd7, 0xff, 0xcd, 0xff, 0xff, 0x7e, 0x00, 0x00, 0x80, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x60, 0x6d, 0xfb, 0xe6, 0xdf, 0xff, 0x7f, 0x00, 0x00, 0x40, 
  0xff, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xa0, 0xf7, 0xff, 0xf1, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xfa, 0xff, 0xf0, 0xff, 0xff, 0xfd, 0x01, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xb0, 0x73, 0xbf, 0xf8, 0xef, 0xff, 0xff, 0x03, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xd0, 0xfc, 0x7f, 0xf8, 0xff, 0xfd, 0xff, 0x03, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xe8, 0xba, 0x1e, 0xfc, 0xff, 0xff, 0xff, 0x07, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xb8, 0xfd, 0x1e, 0xfc, 0xf5, 0xfe, 0xff, 0x07, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xe8, 0xff, 0x1e, 0x7e, 0xbf, 0xbf, 0xff, 0x07, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xb0, 0xde, 0x0f, 0xfe, 0x7d, 0xff, 0xff, 0x07, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x18, 0xff, 0x07, 0xbf, 0xbe, 0xdf, 0xff, 0x0f, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xc8, 0xff, 0x27, 0xff, 0xba, 0xaf, 0xff, 0x0f, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xed, 0xa7, 0xf7, 0xdf, 0xb7, 0x6f, 0x0f, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x38, 0xa6, 0xb7, 0xff, 0xff, 0xfb, 0xcf, 0x0f, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x78, 0xa3, 0x97, 0xff, 0xdf, 0xfd, 0xef, 0x1f, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xd8, 0xa0, 0xe7, 0x19, 0xff, 0xfe, 0xef, 0x17, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xd8, 0xb0, 0xf5, 0xff, 0xfd, 0xff, 0xed, 0x17, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xd8, 0x30, 0xf3, 0xff, 0xef, 0xff, 0x6d, 0x2e, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xd0, 0x10, 0xf1, 0x7f, 0xaf, 0xff, 0xff, 0x07, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x50, 0x14, 0xf0, 0xff, 0xff, 0xdf, 0xef, 0x0f, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x50, 0x32, 0xf2, 0xff, 0xff, 0x7f, 0xe7, 0x07, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x40, 0x30, 0xf8, 0xff, 0xff, 0xff, 0xf6, 0x05, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x60, 0x36, 0xf8, 0xff, 0xff, 0xfb, 0xf5, 0x07, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x40, 0x30, 0xf8, 0x71, 0xff, 0xff, 0xf5, 0x05, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x40, 0x38, 0x78, 0x8f, 0xff, 0xff, 0xf7, 0x05, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0xf8, 0xff, 0xff, 0xff, 0xf3, 0x04, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x08, 0x3c, 0xf8, 0xff, 0xff, 0xff, 0xf3, 0x04, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x3c, 0xf8, 0xff, 0xff, 0xfd, 0x79, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x06, 0x38, 0xf8, 0xff, 0xff, 0xe7, 0x35, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x38, 0xf8, 0xff, 0xff, 0xff, 0x18, 0x00, 0x00, 0x00, 
  0xff, 0x7f, 0x00, 0x00, 0x00, 0x80, 0x03, 0x18, 0xf8, 0xff, 0xff, 0x7f, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x80, 0x01, 0x18, 0xfc, 0xff, 0xff, 0x7f, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0xc0, 0x01, 0x18, 0xfc, 0xff, 0xbf, 0x3f, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0xe0, 0x00, 0x1c, 0xfc, 0xff, 0xff, 0x3f, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0xa0, 0x00, 0x1c, 0xfc, 0xff, 0xdf, 0x1f, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x70, 0x00, 0x1c, 0xfc, 0xff, 0xff, 0x1f, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x50, 0x00, 0x1c, 0xfc, 0xff, 0xff, 0x1f, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x78, 0x00, 0x1c, 0xfe, 0xff, 0xff, 0x0f, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x28, 0x00, 0x1c, 0xfe, 0x7f, 0xff, 0x1f, 0x00, 0x00, 0x00, 0x00, 
  0xff, 0x7f, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x1c, 0xfa, 0xff, 0xff, 0x0f, 0x00, 0x00, 0x00, 0x80, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x14, 0x00, 0x1c, 0xfa, 0xff, 0xff, 0x0f, 0x01, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x14, 0x00, 0x1c, 0xe8, 0xff, 0xff, 0x0d, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x12, 0x00, 0x1c, 0xd8, 0x7f, 0xff, 0x8c, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x16, 0x00, 0x1c, 0xf6, 0xff, 0x3f, 0x0c, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0xaa, 0xff, 0x1f, 0x0c, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x08, 0x00, 0x1c, 0x59, 0xfd, 0x07, 0x0c, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x09, 0x00, 0x1e, 0x08, 0xfd, 0x03, 0x0c, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x01, 0x00, 0x1e, 0x06, 0xf3, 0x01, 0x0e, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x01, 0x00, 0x3f, 0xe1, 0x42, 0x00, 0x0e, 0x00, 0x00, 0x70, 0xce, 
  0xff, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x03, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x50, 0x4a, 
  0xff, 0x7f, 0x00, 0x00, 0x80, 0x00, 0x80, 0x37, 0x00, 0x01, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x80, 0x00, 0xc0, 0x37, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x37, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x04, 0x80, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x01, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x64, 0x4e, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x30, 0x03, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x24, 0xca, 
  0xfe, 0x7f, 0x00, 0x00, 0x40, 0xc0, 0x3f, 0x20, 0x07, 0x02, 0x00, 0x0c, 0x00, 0x00, 0x44, 0x14, 
  0xfe, 0x7f, 0x00, 0x00, 0x40, 0x60, 0x7b, 0x60, 0x1f, 0x07, 0x00, 0x0c, 0x00, 0x00, 0x44, 0x0c, 
  0xfe, 0x7f, 0x00, 0x00, 0x40, 0xb0, 0x7f, 0x20, 0xff, 0x1f, 0x00, 0x0c, 0x00, 0x00, 0x04, 0x14
};


static const unsigned char frame5[] U8X8_PROGMEM  =  {
  0x00, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0xaa, 0xaa, 0x6a, 0xdb, 0xf6, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd5, 0xfd, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6b, 0x56, 0xff, 0xff, 0xff, 0x03, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x80, 0xbe, 0xfb, 0x7b, 0xff, 0xbf, 0x07, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xeb, 0xfd, 0xef, 0xfd, 0xff, 0x0f, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x40, 0xfd, 0x6e, 0x7f, 0xff, 0x7f, 0x1f, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xd7, 0xff, 0xdb, 0xff, 0xff, 0x3f, 0x00, 0x00, 0x80, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x60, 0xfd, 0xfb, 0xed, 0xff, 0xff, 0x7e, 0x00, 0x00, 0xc0, 
  0xff, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xa0, 0x7f, 0xff, 0xf2, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xf2, 0xff, 0xf1, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xb0, 0xfb, 0xff, 0xf8, 0xff, 0xff, 0xff, 0x03, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xd0, 0x5e, 0x3f, 0xf8, 0xef, 0xfd, 0xfd, 0x03, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xe8, 0xfb, 0x7d, 0xf8, 0xff, 0xfd, 0xfd, 0x03, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x78, 0xfd, 0x1f, 0xfc, 0xff, 0xff, 0xff, 0x07, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x28, 0xff, 0x1e, 0xfc, 0xb5, 0xfe, 0xff, 0x07, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x70, 0xff, 0x0e, 0xfc, 0xff, 0xff, 0xff, 0x07, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xd0, 0xde, 0x0f, 0xfc, 0xdd, 0xff, 0xff, 0x07, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xb8, 0xdf, 0x2f, 0xfc, 0x7f, 0xdf, 0xf7, 0x07, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xfb, 0x2f, 0xfe, 0xbf, 0xff, 0xfd, 0x0f, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xe8, 0xbd, 0x3f, 0xef, 0xbb, 0xdf, 0xbf, 0x0f, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xee, 0x6f, 0xef, 0xd3, 0xff, 0xef, 0x0f, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x78, 0xe3, 0xdf, 0x07, 0xff, 0xff, 0xef, 0x0f, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x11, 0xef, 0xdf, 0xdd, 0xfd, 0xee, 0x1f, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xd8, 0x10, 0xff, 0xff, 0xfe, 0xff, 0x3f, 0x17, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xd0, 0x38, 0xf3, 0x7f, 0x5f, 0xff, 0x7f, 0x07, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xd0, 0x34, 0xf2, 0xff, 0xae, 0x7f, 0x77, 0x77, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x50, 0x30, 0xf4, 0xff, 0xdf, 0xbf, 0xf3, 0x07, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x60, 0x30, 0xf0, 0xff, 0xff, 0xff, 0xf3, 0x07, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x60, 0x36, 0xf0, 0xff, 0xff, 0xf7, 0xf1, 0x07, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x40, 0x32, 0xf0, 0xfb, 0xff, 0xff, 0xf6, 0x05, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x40, 0x38, 0x70, 0x84, 0xff, 0xff, 0xf7, 0x05, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0xf8, 0xff, 0xff, 0xff, 0xf3, 0x04, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x18, 0x3c, 0xf8, 0xff, 0xff, 0xff, 0xfb, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x3c, 0xf8, 0xff, 0xff, 0xff, 0x7d, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x06, 0x38, 0xf8, 0xff, 0xff, 0xf1, 0x3d, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x07, 0x38, 0xf8, 0xff, 0xff, 0xef, 0x1e, 0x00, 0x00, 0x00, 
  0xff, 0x7f, 0x00, 0x00, 0x00, 0x80, 0x03, 0x38, 0xf8, 0xff, 0xff, 0x7f, 0x02, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x80, 0x01, 0x38, 0xf8, 0xff, 0xdf, 0x7f, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0xc0, 0x01, 0x38, 0xf8, 0xff, 0xdf, 0x3f, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0xc0, 0x01, 0x38, 0xf8, 0xff, 0xff, 0x3f, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0xe0, 0x00, 0x38, 0xf8, 0xff, 0xdf, 0x1f, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0xe0, 0x00, 0x38, 0xfc, 0xff, 0xff, 0x1f, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x70, 0x00, 0x38, 0xfc, 0xff, 0xff, 0x1f, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x50, 0x00, 0x38, 0xfc, 0xff, 0xff, 0x0f, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x78, 0x00, 0x38, 0xfc, 0xdf, 0xff, 0x0f, 0x00, 0x00, 0x00, 0x80, 
  0xff, 0x7f, 0x00, 0x00, 0x00, 0x28, 0x00, 0x38, 0xf8, 0xff, 0xe7, 0x07, 0x00, 0x00, 0x00, 0x80, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x34, 0x00, 0x38, 0xf0, 0xff, 0xff, 0x07, 0x01, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x38, 0xe8, 0xff, 0xff, 0x06, 0x01, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x14, 0x00, 0x38, 0xd8, 0x7f, 0x7c, 0x06, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x3c, 0xb6, 0xff, 0x3f, 0x03, 0x00, 0x00, 0x00, 0x0c, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x3c, 0xea, 0xff, 0x1f, 0x03, 0x00, 0x00, 0x00, 0x04, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x02, 0x00, 0x3e, 0x58, 0xfd, 0x07, 0x13, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x3f, 0x0a, 0xfb, 0x03, 0x13, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x04, 0xf2, 0x01, 0x13, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x09, 0x00, 0x3f, 0xe2, 0x40, 0x00, 0x03, 0x00, 0x00, 0x70, 0xce, 
  0xff, 0x7f, 0x00, 0x00, 0x00, 0x01, 0x80, 0x7f, 0x02, 0x00, 0x00, 0x03, 0x00, 0x00, 0x50, 0x4a, 
  0xff, 0x7f, 0x00, 0x00, 0x00, 0x01, 0xc0, 0x77, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x7f, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x7f, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x04, 0x80, 
  0xfe, 0x7f, 0x00, 0x00, 0x80, 0x00, 0x00, 0xe8, 0x01, 0x00, 0x00, 0x07, 0x00, 0x00, 0x64, 0x4e, 
  0xfe, 0x7f, 0x00, 0x00, 0x80, 0x00, 0x1f, 0xe0, 0x03, 0x00, 0x00, 0x07, 0x00, 0x00, 0x24, 0xca, 
  0xfe, 0x7f, 0x00, 0x00, 0x80, 0xc0, 0x3d, 0x60, 0x07, 0x06, 0x00, 0x07, 0x00, 0x00, 0x44, 0x14, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x60, 0x7f, 0xe0, 0x1f, 0x0e, 0x00, 0x07, 0x00, 0x00, 0x44, 0x0c, 
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0xd8, 0x6d, 0xb0, 0xff, 0x1d, 0x00, 0x07, 0x00, 0x00, 0x04, 0x14
};

const char* HOSTNAME = "ai.hackclub.com";


void setupWifi() {
  WiFiManager wm;
  bool res;
  res = wm.autoConnect("AutoConnectAP","password");

  if(!res) {
      Serial.println("Failed to connect");
      wm.resetSettings();
      ESP.restart();
  } 
  else {
      Serial.println("connected to WiFi" + res);
  }
}

void u8g2_prepare(void) {
  u8g2.setFont(u8g2_font_6x10_tf);
  u8g2.setFontRefHeightExtendedText();
  u8g2.setDrawColor(1);
  u8g2.setFontPosTop();
  u8g2.setFontDirection(0);
}

void setup_animation(){
  delay(500);

  u8g2.begin();
  u8g2.clearBuffer();
  u8g2_prepare();
  u8g2.drawXBMP(0, 0, 128, 64, frame);
  u8g2.sendBuffer();

  delay(100);
  u8g2.clearBuffer();
  u8g2_prepare();
  u8g2.drawXBMP(0, 0, 128, 64, frame1);
  u8g2.sendBuffer();

  delay(100);
  u8g2.clearBuffer();
  u8g2_prepare();
  u8g2.drawXBMP(0, 0, 128, 64, frame2);
  u8g2.sendBuffer();

  delay(100);
  u8g2.clearBuffer();
  u8g2_prepare();
  u8g2.drawXBMP(0, 0, 128, 64, frame3);
  u8g2.sendBuffer();

  delay(100);
  u8g2.clearBuffer();
  u8g2_prepare();
  u8g2.drawXBMP(0, 0, 128, 64, frame4);
  u8g2.sendBuffer();

  delay(100);
  u8g2.clearBuffer();
  u8g2_prepare();
  u8g2.drawXBMP(0, 0, 128, 64, frame5);
  u8g2.sendBuffer();
}

void wifi_connecting_animation(){
    u8g2.clearBuffer();
    u8g2_prepare();
    u8g2.drawStr(0, 0, "WiFi connecting");
    u8g2.sendBuffer();
    delay(100);
    u8g2.clearBuffer();
    u8g2_prepare();
    u8g2.drawStr(0, 0, "WiFi connecting.");
    u8g2.sendBuffer();
    delay(100);
    u8g2.clearBuffer();
    u8g2_prepare();
    u8g2.drawStr(0, 0, "WiFi connecting..");
    u8g2.sendBuffer();
    delay(100);
    u8g2.clearBuffer();
    u8g2_prepare();
    u8g2.drawStr(0, 0, "WiFi connecting...");
    u8g2.sendBuffer();
    delay(1000);
}








void setup(void) {
  Serial.begin(115200);
  setup_animation(); // Call the setup animation function
}

WiFiClientSecure client;


void loop(void) {
  // --- WiFi Reconnection Logic (same as before) ---
  if (!WiFi.isConnected()) {
    Serial.println("WiFi disconnected, reconnecting...");
    setupWifi(); // Attempt to reconnect
    
    wifi_connecting_animation();


    // Check again if connection succeeded before proceeding
    if (!WiFi.isConnected()) {
      Serial.println("WiFi reconnection failed.");
       // Optionally display failure message on screen
      u8g2.clearBuffer();
      u8g2_prepare();
      u8g2.drawStr(0, 0, "WiFi Failed!");
      u8g2.sendBuffer();
       delay(5000); // Wait before potentially retrying in the next loop iteration
       return; // Exit loop iteration if WiFi is still down
    } else {
      Serial.println("WiFi Reconnected!");
       // Optionally display success message
      u8g2.clearBuffer();
      u8g2_prepare();
      u8g2.drawStr(0, 0, "WiFi OK!");
      u8g2.sendBuffer();
      delay(1000);
    }
  }

  // --- HTTPS POST Request Logic ---
  client.setInsecure(); // Allow insecure connections (use with caution)

  Serial.println("\nStarting connection to server for POST...");

  if (!client.connect(HOSTNAME, 443)) {
    Serial.println("Connection failed!");
    // Optionally display connection failure message
    u8g2.clearBuffer();
    u8g2_prepare();
    u8g2.drawStr(0, 10, HOSTNAME);
    u8g2.sendBuffer();
    delay(2000);
  } else {
    Serial.println("Connected to server!");
    // Optionally display connection success message
    u8g2.clearBuffer();
    u8g2_prepare();
    u8g2.drawStr(0, 0, "Server Connected!");
    u8g2.sendBuffer();
    delay(1000);


    const char* jsonPayload = "{\"messages\": [{\"role\": \"user\", \"content\": \"Tell me a joke!\"}]}";
    int jsonPayloadLength = strlen(jsonPayload); // Calculate the length of the payload

    client.println("POST /chat/completions HTTP/1.1"); // Use POST and HTTP/1.1

    // 2. Headers
    client.print("Host: "); // Use client.print for header name
    client.println(HOSTNAME); // Use client.println for header value (adds \r\n)

    client.println("Content-Type: application/json"); // Specify JSON content

    client.print("Content-Length: "); // Specify the length of the body
    client.println(jsonPayloadLength); // The calculated length

    client.println("Connection: close"); // Close connection after response

    client.println();

    // 4. Request Body (the JSON payload)
    client.print(jsonPayload); // Use client.print to send the body data without extra newline

    Serial.println("Request sent. Waiting for response...");
    // Optionally update display
    u8g2.clearBuffer();
    u8g2_prepare();
    u8g2.drawStr(0, 0, "Request Sent");
    u8g2.sendBuffer();


    // --- Response Handling (similar to before, but might need adjustments based on actual API response) ---

    // Wait for the server to respond or timeout
    unsigned long timeout = millis();
    while (!client.available() && millis() - timeout < 5000) {
      // Wait for 5 seconds for data to become available
      delay(10);
    }

    // Check if data is available
    if (!client.available()) {
        Serial.println("No response received from server or timeout.");
        client.stop(); // Clean up the connection
        // Optionally update display
        u8g2.clearBuffer();
        u8g2_prepare();
        u8g2.drawStr(0, 0, "No Response");
        u8g2.sendBuffer();
        delay(2000);
        return; // Exit this loop iteration
    }

    Serial.println("Receiving response:");
    // Read the response headers (optional, but good for debugging)
    while (client.connected()) {
      String line = client.readStringUntil('\n');
      Serial.print("."); // Print dots while reading headers
      if (line == "\r") {
        Serial.println("\nHeaders received.");
        break; // Found the empty line after headers
      }
      // You could print or parse headers here if needed
      // Serial.println(line);
    }

    Serial.println("Reading response body:");
    // Read the response body
    // Consider using a JSON parsing library (like ArduinoJson) here
    // for more robust handling instead of just printing characters.
    u8g2.clearBuffer();
    u8g2_prepare();
    u8g2.setCursor(0, 0); // Set cursor for display
    u8g2.print("Response:");
    int lineNum = 1; // Track line number for display

    while (client.available()) {
      char c = client.read();
      Serial.write(c); // Print character to Serial Monitor

      // Basic display logic (might overflow screen quickly)
      if (c == '\n') {
          lineNum++;
          u8g2.setCursor(0, u8g2.getAscent() * lineNum); // Move to next line on display
      } else if (u8g2.getCursorX() < u8g2.getDisplayWidth()) {
          u8g2.print(c); // Print character to display if it fits
      }
      // Add logic here to handle longer responses if needed (scrolling, etc.)
    }
    u8g2.sendBuffer(); // Update the display with the received content

    client.stop(); // Close the connection
    Serial.println("\nConnection closed.");

  } // End of else (client.connect successful)

  // Add a delay at the end of the loop to prevent spamming requests
  Serial.println("Waiting before next request...");
  delay(10000); // Wait 10 seconds before the next loop iteration

}